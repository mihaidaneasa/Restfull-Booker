{
	"info": {
		"_postman_id": "5d1ba6ec-7fd3-4e56-88d9-4643c0282e60",
		"name": "Restfull booker - Negative testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32866959"
	},
	"item": [
		{
			"name": "createAuthBadCredentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if the status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response body include the word reason\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"reason\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response body include the words BAd credentials\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Bad credentials\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify if the response time is more than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n    \"username\" : \"Mihai\", \r\n    \"password\" : \"password123\" \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{restfullBooking}}/auth",
					"host": [
						"{{restfullBooking}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "createAuthBadRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if the status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response time is more than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n    \"username\" : Mihai, \r\n    \"password\" : \"password123\" \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{restfullBooking}}/auth",
					"host": [
						"{{restfullBooking}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "getBookingNotFound",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(7200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{restfullBooking}}/booking/:id",
					"host": [
						"{{restfullBooking}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "12345"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "createBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});\r",
							"\r",
							"var data = pm.response.json();\r",
							"pm.test(\"Verify if the results for the selected bookingid are corect\", function () {\r",
							"    pm.expect(data.booking.firstname).to.eql(\"Mihai\");\r",
							"    pm.expect(data.booking.lastname).to.eql(\"Daneasa\");\r",
							"    pm.expect(data.booking.totalprice).to.eql(111);\r",
							"    pm.expect(data.booking.depositpaid).to.eql(true);\r",
							"    pm.expect(data.booking.bookingdates.checkin).to.eql(\"2024-01-01\");\r",
							"    pm.expect(data.booking.bookingdates.checkout).to.eql(\"2024-01-14\");\r",
							"    pm.expect(data.booking.additionalneeds).to.eql(\"Site seeing\");\r",
							"    console.log(data.booking.firstname);\r",
							"    console.log(data.booking.lastname);\r",
							"    console.log(data.booking.totalprice);\r",
							"    console.log(data.booking.depositpaid);\r",
							"    console.log(data.booking.bookingdates.checkin);\r",
							"    console.log(data.booking.bookingdates.checkout);\r",
							"    console.log(data.booking.additionalneeds);\r",
							"    console.log(\"Am rulat testul\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "a4b29f0afc0ea5e",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Mihai\",\r\n    \"lastname\" : \"Daneasa\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2024-01-01\",\r\n        \"checkout\" : \"2024-01-14\"\r\n    },\r\n    \"additionalneeds\" : \"Site seeing\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{restfullBooking}}/booking",
					"host": [
						"{{restfullBooking}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "createBookingBadRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if the status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "d48831a55accb24",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Mihai\",\r\n    \"lastname\" : \"Daneasa\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2024-01-01\",\r\n        \"checkout\" : \"2024-01-14\"\r\n    },\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{restfullBooking}}/booking",
					"host": [
						"{{restfullBooking}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateBookingfBadRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if the status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{passowrd}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Mihai-Andrei\",\r\n    \"lastname\" : \"Daneasa\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : false,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2024-01-01\",\r\n        \"checkout\" : \"2024-01-14\"\r\n    },\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{restfullBooking}}/booking/:id",
					"host": [
						"{{restfullBooking}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "1290"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "patchUpdateBookingBadRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "a4b29f0afc0ea5e",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"fistname\"  \"James\",\r\n    \"latname\" : \"Brown\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{restfullBooking}}/booking/:id",
					"host": [
						"{{restfullBooking}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "1290"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "patchUpdateBookingForbiden",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if status code is 403\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "d48831a55accb24",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{restfullBooking}}/booking/:id",
					"host": [
						"{{restfullBooking}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "200"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteBookingForbiden",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if status code is 403\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "d48831a55accb24",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{restfullBooking}}/booking/:id",
					"host": [
						"{{restfullBooking}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": ""
						}
					]
				}
			},
			"response": []
		}
	]
}